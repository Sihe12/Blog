version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "8080:8080"
    depends_on:
      - backend
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080", "--insecure"]
      interval: 30s          
      timeout: 5s            
      retries: 3             
      start_period: 10s      

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "32000:3000"
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      JWT_SECRET: ${JWT_SECRET}
      WEATHER_API_KEY: ${WEATHER_API_KEY}
      HUGGING_FACE_API_KEY: ${HUGGING_FACE_API_KEY}
    depends_on:
      - mysql
    entrypoint:
      [
        "/bin/sh",
        "-c",
        "until nc -z mysql 3306; do echo waiting for mysql; sleep 3; done; npm start",
      ]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s

  mysql:
    image: mysql:5.7
    platform: linux/amd64
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./db:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "--silent"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

volumes:
  mysql-data:
